---
- name: Prepare all Kubernetes nodes
  hosts: k8s_all
  become: true
  become_method: sudo
  vars:
    k8s_version: "1.30.3"
    ansible_become_password: "1234"
    
  tasks:
    - name: Disable swap
      ansible.builtin.shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Load kernel modules
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter

    - name: Configure sysctl params
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward = 1
        EOF
        sysctl --system

    - name: Install required packages
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Ensure APT keyrings directory exists
      ansible.builtin.file:
          path: /etc/apt/keyrings
          state: directory
          mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        
    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: Install containerd
      package:
        name: containerd.io
        state: present

    - name: Create containerd configuration directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Configure containerd
      ansible.builtin.copy:
        content: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
            runtime_type = "io.containerd.runc.v2"
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: 0644

    - name: Restart and enable containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Remove old Kubernetes GPG key if exists
      ansible.builtin.file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: absent
        
    - name: Download and dearmor Kubernetes GPG key
      ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      changed_when: true

    - name: Set permissions for Kubernetes GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/ /"
        state: present
        filename: kubernetes
        mode: '0644'

    - name: Install kubeadm, kubelet, kubectl
      package:
        name:
          - kubelet={{ k8s_version }}-1.1
          - kubeadm={{ k8s_version }}-1.1
          - kubectl={{ k8s_version }}-1.1
        state: present
        allow_downgrade: yes

    - name: Hold Kubernetes packages to prevent auto-update
      ansible.builtin.shell: |
        apt-mark hold kubelet kubeadm kubectl

    - name: Start and enable kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes
